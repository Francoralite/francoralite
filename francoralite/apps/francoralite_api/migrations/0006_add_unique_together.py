# Generated by Django 3.1.12 on 2021-09-27 16:30

from django.db import migrations, models
import django.db.models.deletion


def remove_duplicated_records(apps, schema_editor):

    for migration in Migration.operations:
        if isinstance(migration, migrations.AlterUniqueTogether):

            field1, field2 = tuple('%s_id' % name for name in tuple(migration.unique_together)[0])
            model = apps.get_model('francoralite_api', migration.name)

            known_keys = set()
            for record in model.objects.all():
                key = (getattr(record, field1), getattr(record, field2))
                if key in known_keys:
                    record.delete()
                else:
                    known_keys.add(key)


class Migration(migrations.Migration):

    dependencies = [
        ('francoralite_api', '0005_remove_telemeta_references'),
    ]

    operations = [
        migrations.RunPython(
            code=remove_duplicated_records,
            reverse_code=lambda *args: None,
            atomic=True,
        ),
        migrations.AlterUniqueTogether(
            name='collectioncollectors',
            unique_together={('collection', 'collector')},
        ),
        migrations.AlterUniqueTogether(
            name='collectioninformer',
            unique_together={('collection', 'informer')},
        ),
        migrations.AlterUniqueTogether(
            name='collectionlanguage',
            unique_together={('collection', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='collectionlocation',
            unique_together={('collection', 'location')},
        ),
        migrations.AlterUniqueTogether(
            name='collectionpublisher',
            unique_together={('collection', 'publisher')},
        ),
        migrations.AlterUniqueTogether(
            name='itemauthor',
            unique_together={('item', 'author')},
        ),
        migrations.AlterUniqueTogether(
            name='itemcoirault',
            unique_together={('item', 'coirault')},
        ),
        migrations.AlterUniqueTogether(
            name='itemcollector',
            unique_together={('item', 'collector')},
        ),
        migrations.AlterUniqueTogether(
            name='itemcompositor',
            unique_together={('item', 'compositor')},
        ),
        migrations.AlterUniqueTogether(
            name='itemdance',
            unique_together={('item', 'dance')},
        ),
        migrations.AlterUniqueTogether(
            name='itemdomainmusic',
            unique_together={('item', 'domain_music')},
        ),
        migrations.AlterUniqueTogether(
            name='itemdomainsong',
            unique_together={('item', 'domain_song')},
        ),
        migrations.AlterUniqueTogether(
            name='itemdomaintale',
            unique_together={('item', 'domain_tale')},
        ),
        migrations.AlterUniqueTogether(
            name='itemdomainvocal',
            unique_together={('item', 'domain_vocal')},
        ),
        migrations.AlterUniqueTogether(
            name='iteminformer',
            unique_together={('item', 'informer')},
        ),
        migrations.AlterUniqueTogether(
            name='itemlanguage',
            unique_together={('item', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='itemmusicalgroup',
            unique_together={('item', 'musical_group')},
        ),
        migrations.AlterUniqueTogether(
            name='itemmusicalorganization',
            unique_together={('item', 'musical_organization')},
        ),
        migrations.AlterUniqueTogether(
            name='itemperformance',
            unique_together={('item', 'performance')},
        ),
        migrations.AlterUniqueTogether(
            name='itemthematic',
            unique_together={('item', 'thematic')},
        ),
        migrations.AlterUniqueTogether(
            name='itemusefulness',
            unique_together={('item', 'usefulness')},
        ),
        migrations.AlterUniqueTogether(
            name='performancecollectionmusician',
            unique_together={('performance_collection', 'musician')},
        ),
    ]
