---

version: '2.1'

services:
  adminer:
    image: "${ADMINER_IMAGE}:${ADMINER_VERSION}"
    logging: &logging
      driver: 'json-file'
      options:
        max-size: "${LOGGING_MAX_SIZE}"
        max-file: "${LOGGING_MAX_FILE}"
    restart: 'unless-stopped'
    networks:
      - 'services'
      - 'francoralite'
    labels:
      - 'traefik.frontend.rule=Host:adminer.francoralite.localhost'
      - 'traefik.docker.network=services'

  app:
    build:
      context: .
    environment:
      COVERALLS_REPO_TOKEN: "${COVERALLS_REPO_TOKEN}"
    labels:
      - 'traefik.frontend.rule=Host:app.francoralite.localhost'
      - 'traefik.docker.network=services'
    volumes:
      - './:/srv/app'

  db:
    labels:
      - 'traefik.frontend.rule=Host:db.francoralite.localhost'
    command:
      - --default-authentication-plugin=mysql_native_password

  nginx:
    labels:
      - 'traefik.frontend.rule=Host:nginx.francoralite.localhost'
      - 'traefik.docker.network=services'

  keycloak:
    labels:
      - 'traefik.frontend.rule=Host:keycloak.francoralite.localhost'
      - 'traefik.docker.network=services'

  keycloak_db:
    labels:
      - 'traefik.frontend.rule=Host:keycloak-db.francoralite.localhost'

  dejavu:
    image: "${DEJAVU_IMAGE}:${DEJAVU_VERSION}"
    restart: 'unless-stopped'
    logging:
      <<: *logging
    networks:
      - francoralite
      - services
    labels:
      - 'traefik.frontend.rule=Host:dejavu.francoralite.localhost'
      - 'traefik.docker.network=services'

  elasticsearch:
    labels:
      - 'traefik.frontend.rule=Host:elasticsearch.francoralite.localhost'
      - 'traefik.docker.network=francoralite'

  reverse_proxy:
    image: 'traefik:1.7.11'
    command: '--api --docker --docker.domain=francoralite.localhost'
    networks:
      - 'francoralite'
      - 'keycloak'
      - 'services'
    ports:
      - '8080:80'
      - '58080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
