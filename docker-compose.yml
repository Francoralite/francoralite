---

# Docker compose to build Telemeta meta project

version: '2.1'
services:
  data:
    image: debian:jessie
    volumes:
       - ./data/media/:/srv/media
       - ./data/backup/:/srv/backup
       - ./data/static:/srv/static
       - ./data/bower:/srv/bower
       - ./data/log/nginx:/var/log/nginx
       - ./data/log/uwsgi:/var/log/uwsgi
    command: 'true'

  db:
    image: mysql:8.0.2
    volumes:
      - ./telemeta_mshs/apps/Telemeta/scripts/:/srv/scripts
      - ./data/mysql/:/var/lib/mysql
    volumes_from:
      - data
    env_file:
      - ./telemeta_mshs/apps/Telemeta/env/prod.env
    healthcheck:
      test: ["CMD-SHELL", "mysql -u $${MYSQL_USER} -p$${MYSQL_PASSWORD} -e 'SHOW DATABASES;'"]
      interval: 30s
      timeout: 2s
      retries: 3

  broker:
    image: redis

  search:
    image: elasticsearch:1

  app:
    build:
      context: .
    volumes:
      - ./:/srv/app
      - ./scripts:/srv/scripts
      - ./telemeta_mshs/apps/Telemeta/app/enumeration:/srv/app/enumeration
      - ./telemeta_mshs/apps/Telemeta/app/fixtures:/srv/app/fixtures
      - ./telemeta_mshs/settings/base.py:/srv/app/settings.py
      - ./telemeta_mshs/apps/Telemeta/app/settings.py:/srv/app/telemeta_settings.py
      - ./telemeta_mshs/apps/Telemeta/app/worker.py:/srv/app/worker.py
      - ./telemeta_mshs/apps/Telemeta/app/robots.txt:/srv/app/telemeta_mshs/robots.txt
    volumes_from:
      - data
    env_file:
      - ./telemeta_mshs/apps/Telemeta/env/prod.env
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 8000"]
      interval: 10s
      timeout: 2s
      retries: 20
    command: /bin/bash /srv/scripts/start_api.sh
    depends_on:
      db:
        condition: service_healthy
    links:
      - broker
      - db
      - search

  worker:
    build:
      context: .
    volumes_from:
      - app
    env_file:
      - ./telemeta_mshs/apps/Telemeta/env/prod.env
    command: /bin/bash /srv/scripts/start_worker.sh
    depends_on:
      app:
        condition: service_healthy
    links:
      - broker
      - db

  nginx:
    image: nginx
    ports:
      - '8000:80'
    volumes:
      - ./etc/nginx.conf:/etc/nginx/conf.d/default.conf
    volumes_from:
      - data
    links:
      - app
      - phpmyadmin

  phpmyadmin:
      image: nazarpc/phpmyadmin
      ports:
        - '1234:80'
      links:
        - db:mysql
      environment:
        - ABSOLUTE_URI=http://localhost:8000/phpmyadmin/
